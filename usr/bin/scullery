#! /bin/sh
workdir="$HOME/Projects/Android/Scullery"
scullibdir="/usr/lib/scullery"
scullplugdir="$HOME/.config/scullery/plugins"
ifacestyle="term"
version=""
if [ -f "$HOME/.scullery" ]; then
    . "$HOME/.scullery"
elif [ -f /etc/scullery.rc ]; then
    . /etc/scullery.rc
else
    echo "Critical Error! Configuration file not found. Please place a config
file in either /etc/scullery.rc or \$HOME/.scullery"
    exit 1
fi

show_help(){
    echo "Welcome to Android Scullery! This is a fully re-written version of the
Android Kitchen ROM customization tools. It's a GNU/Linux shell script written
to target the Dash shell, for now. Might work with Cygwin, I guess. Probably.
But that's not important because the only important thing about Windows is
installing a FOSS system over it. What is important is that this is intended
to provide a more sane, configurable version of the Android Kitchen which can
be packaged for many GNU/Linux distributions."
}

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
verbose=0

while getopts "h?vdlpi:" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    v)  verbose=1
        ;;
    d)  workdir=$OPTARG
        ;;
    l)  scullibdir=$OPTARG
        ;;
    p)  scullplugdir=$OPTARG
        ;;
    i)  ifacestyle=$OPTARG
        ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

if [ ! -d "$scullibdir" ]; then
    echo "Critical Error! Library folder not found!"
    exit 2
fi
if [ ! -f "$scullibdir/*" ]; then
    echo "Critical Error! Library folder not populated!"
    exit 3
fi
if [ ! -d "$workdir" ]; then
    mkdir -p "$workdir"
fi
if [ ! -d "$scullplugdir" ]; then
    mkdir -p "$scullplugdir"
fi
if [ [ $ifacestyle == "term" ] || [ $ifacestyle == "cli" ] ]; then
    if [ ! -f /usr/bin/wgdda ]; then
        if [ -f /usr/bin/whiptail ]; then
            alias dialog=whiptail
        elif [ -f /usr/bin/dialog ]; then
            alias dialog=dialog
        else
            echo "Critical Error! Interface Dependency not satisfied(Install either
whiptail or dialog.)"
            exit 4
        fi
    else
        NOGUI_DIALOG="true"
        . wgdda
    fi
elif [ [ $ifacestyle == "dial" ] || [ $ifacestyle == "wiz" ] ]; then
    if [ ! -f /usr/bin/wgdda ]; then
        if [ -f /usr/bin/zenity ]; then
            alias dialog=zenity
        elif [ -f /usr/bin/xdialog ]; then
            alias dialog=xdialog
        else
            echo "Critical Error! Interface Dependency not satisfied(Install either
zenity or xdialog.)"
            exit 4
        fi
    else
        NOGUI_DIALOG=""
        . wgdda
    fi
elif [ $ifacestyle == "gui" ]
    echo "Critical Error! Interface not yet supported."
    exit 5
else 
    echo "Critical Error! Invalid interface style specified."
fi

