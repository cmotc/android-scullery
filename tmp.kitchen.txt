#!/bin/bash

############################################################################
#
# Copyright (c) 2013 - dsixda (dislam@rocketmail.com)
#
# Android Kitchen is 100% free.  This script file is intended for personal
# and/or educational use only.  It may not be duplicated for monetary
# benefit or any other purpose without the permission of the developer.
#
############################################################################

version=0.224


if [ ! -e menu ]
then
  echo
  echo "Ensure you run this file from the SAME folder as where it was"
  echo "installed, otherwise the kitchen will have problems running the"
  echo "scripts.  After you 'cd' to the correct folder, start the kitchen"
  echo "with the ./menu command, NOT with any other command or method!"
  exit 0
fi

dir_list=( original_update scripts tools )
error_found=0

for check_dir in ${dir_list[@]}
do
  if [ ! -e $check_dir ]
  then
    echo "Error: Folder '$check_dir' not found"
    error_found=1
  fi
done

if [ $error_found == 1 ]
then
  echo
  echo "Ensure you have installed the folders for the kitchen correctly."
  exit 0
fi


chmod 755 scripts/*
scripts/check_install_dir

if [ "$?" == "1" ]
then
  exit 0
fi

scripts/init_kitchen
scripts/check_binaries

if [ "$?" == "1" ]
then
  exit 0
fi


while :
do

  clear

  echo 
  echo "============================================================"
  echo " Android Kitchen $version - by dsixda (xda-developers.com)"
  echo "============================================================"
  echo 
  echo "> MAIN MENU"
  echo
  echo "  1 - Set up working folder from ROM"
  echo "  2 - Add root permissions"
  echo "  3 - Add BusyBox"
  echo "  4 - Disable boot screen sounds"
  echo "  5 - Zipalign all *.apk files to optimize RAM usage"
  echo "  6 - Change wipe status of ROM"
  echo "  7 - Change name of ROM"
  echo "  8 - Show working folder information"
  echo 
  echo "  0 - ADVANCED OPTIONS"
  echo " 00 - LEGACY OPTIONS (old and rarely used)"
  echo " 99 - Build ROM from working folder"
  echo
  echo "  u - Kitchen Info/Update/Donate"
  echo "  x - Exit"
  echo
  echo 
  echo -n "Enter option: "
  read opt

  if [ "$opt" != "x" ] && [ "$opt" != "u" ] && [ "$opt" != "1" ]
  then
    scripts/check_multiple_working
  fi
  
  if [ "$?" != "1" ]
  then
    case $opt in
      1) clear; scripts/check_rom; continue;;
      2) scripts/do_root; continue;;
      3) scripts/add_busybox show_help;;
      4) scripts/disable_sounds;;
      5) scripts/do_zipalign;;
      6) scripts/change_wipe;;
      7) scripts/change_rom_name;;
      8) scripts/show_rom_info;;
      0) scripts/menu_advanced $version; continue;;
      00) scripts/menu_legacy $version; continue;;
      99) scripts/build_rom;;
      u) scripts/about $version; continue;;
      x) scripts/init_kitchen; clear; echo; echo "Goodbye."; echo; exit 1;;
      *) echo "Invalid option"; continue;;
    esac
  fi

  scripts/press_enter

done

############################################################################
#
# Copyright (c) 2011 - dsixda (dislam@rocketmail.com)
#
# Android Kitchen is 100% free.  This script file is intended for personal
# and/or educational use only.  It may not be duplicated for monetary
# benefit or any other purpose without the permission of the developer.
#
############################################################################

#
# This script has two optional arguments: 
#
# $1 = "no_info"      - specify this when porting or extracting kernel
# $2 = "kernel_only"  - if this is specified, then $1 is mandatory
#

echo
echo "CREATE WORKING FOLDER FOR ROM"
echo "=============================="
echo
echo "Ensure there is at least one ROM under the 'original_update' folder!"
echo
echo "Select an option:"
echo
echo " s - Show supported formats"
echo " x - Abort, don't create working folder"
echo ""
echo "Or press Enter to continue"
echo
echo -n "? "
read proceed
  
if [ "$proceed" == "x" ]
then
  echo
  echo "Cancelled"
  exit 1

elif [ "$proceed" == "s" ]
then
  
  more tools/formats.txt

  echo
  echo -n "Press Enter to continue, or type 'x' to abort: "
  read proceed
  
  if [ "$proceed" == "x" ]
  then
    exit 1
  fi

fi

scripts/make_backup_working

#
# Check if the working folder was actually backed up
#
result=$?

if [ "$result" == "1" ]
then

  echo
  echo "Error: Old working folder is in use. Ensure its files or folders are not open."
  scripts/press_enter
  exit 1

else

  scripts/choose_rom $2
  res=$?

  if [ "$res" == "1" ] && [ "$2" == "kernel_only" ]
  then
    scripts/press_enter
  fi

  if [ `ls | grep -m 1 WORKING_` ] && [ "$res" != "1" ] && [ "$1" == "" ]
  then

    #
    # Check for radio.img
    #

    echo
    cd WORKING*
    if [ -e radio.img ]
    then
      echo
      echo "NOTE: radio.img was found in the working folder. If you wish to"
      echo "remove it, you may do so at any time before building the ROM."
    else

      if [ -e META-INF/com/google/android/update-script ]
      then
        cd ..
        scripts/update_script_should_convert_back ignore_msg
        res=$?
        cd WORKING_*
      fi
    fi

    if [ -e boot.img ] 
    then
      boot_found=yes
    elif [ -e boot/zImage ] && [ -e boot/initrd.gz ]
    then
      boot_found=yes
    else
      boot_found=no
    fi

    if [ "$boot_found"=="yes" ]
    then

      #
      # Prompt to show ROM info
      # 

      if [ "$1" == "" ]
      then
        cd ..
        scripts/prompt_show_rom_info
      else
        cd ..
      fi

    else
      echo
      echo "No boot image found!"
      cd ..
    fi
  fi
fi

if [ "$1" == "" ]
then
  scripts/press_enter
fi

exit $res
